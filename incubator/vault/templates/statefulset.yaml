apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%s-cluster" .Release.Name (default .Chart.Name .Values.nameOverride) | trunc 63 | trimSuffix "-" }}
  labels:
    app: {{ template "vault.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  ports:
  - port: 8201
    name: cluster
  clusterIP: None
  selector:
    app: {{ template "vault.name" . }}
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "vault.fullname" . }}
  labels:
    app: {{ template "vault.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ printf "%s-%s-cluster" .Release.Name (default .Chart.Name .Values.nameOverride) | trunc 63 | trimSuffix "-" | quote }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: {{ template "vault.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "vault.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.vault.dev }}
        command: ["vault", "server", "-dev", "-dev-listen-address", "[::]:8200"]
        {{- else }}
        command:
          - "/bin/sh"
          - "-ec"
          - |
            export VAULT_CLUSTER_ADDR=http://$(hostname).${STATEFULLSET_SERVICE}:8201
            exec vault server -config /vault/config/config.json
        {{- end }}
        env:
        - name: STATEFULLSET_SERVICE
          value: {{ printf "%s-%s-cluster" .Release.Name (default .Chart.Name .Values.nameOverride) | trunc 63 | trimSuffix "-" | quote }}
        ports:
        - containerPort: {{ .Values.service.port }}
        - containerPort: 8201
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.port }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - 'VAULT_ADDR=http://127.0.0.1:8200/ vault status'
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            add:
            - IPC_LOCK
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config/
        - name: vault-root
          mountPath: /root/
        {{- range .Values.vault.customSecrets }}
        - name: {{ .secretName }}
          mountPath: {{ .mountPath }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.affinity }}
      affinity:
{{ tpl .Values.affinity . | indent 8 }}
      {{- end }}
      volumes:
        - name: vault-config
          configMap:
            name: "{{ template "vault.fullname" . }}-config-{{ .Release.Revision }}"
        - name: vault-root
          emptyDir: {}
        {{- range .Values.vault.customSecrets }}
        - name: {{ .secretName }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
